{"version":3,"sources":["Components/card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","username","id","className","alt","src","CardList","robots","map","user","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAdF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACnC,OACI,sBAAKC,UAAU,uDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACjB,gCACI,6BAAKH,IACT,4BAAIE,IACJ,4BAAID,WCcDM,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACC,8BAEDA,EAAOC,KAAI,SAACC,EAAMP,GAChB,OAAS,cAAC,EAAD,CAEHA,GAAIK,EAAOL,GAAIA,GACfH,KAAMQ,EAAOL,GAAIH,KACjBC,MAAOO,EAAOL,GAAIF,MAClBC,SAAUM,EAAOL,GAAID,UAJhBC,SCIFQ,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACG,qBAAKT,UAAU,MAAf,SACC,uBACIA,UAAU,sCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAPI,G,KARA,SAACC,GACZ,OACG,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,aCqBAC,G,wDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAK5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,6DAEHG,KAAKX,MAAMK,a,GAnBFQ,cCgDZC,E,kDAzCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAbvC,EAAKX,MAAQ,CACTjB,OAAQ,GACRI,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfyB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC9BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAO3C,WAAS,IAAD,EAC4BZ,KAAKJ,MAA7BjB,EADJ,EACIA,OAAQI,EADZ,EACYA,YACd8B,EAAiBlC,EAAOmC,QAAO,SAAAC,GAChC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGtD,OAAQrC,EAAOuC,OAGf,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,oCACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,WAPtB,oBAAItC,UAAU,KAAd,4B,GA1BM2B,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACD,cAAC,IAAMC,WAAP,UACD,cAAC,EAAD,MAELC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8032f73b.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\n\n\nconst Card = ({ name, email, username, id }) => {\n    return (\n        <div className=' tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\n            <div>\n                <h2>{name}</h2>\n            <p>{username}</p> \n            <p>{email}</p> \n           </div>\n        </div>\n    \n    )\n}\n\nexport default Card; ","import React from 'react';\nimport Card from './card.js';\n\n\nconst CardList = ({ robots }) => {\n    \n    return (\n     <div>\n            {\n    robots.map((user, id) => {\n      return  (<Card \n            key={id} \n            id={robots[id].id} \n            name={robots[id].name} \n            email={robots[id].email} \n            username={robots[id].username}  \n            /> )})  \n                \n            }\n\n        </div> \n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return (\n       <div className=\"pa2\">\n        <input \n            className=\"tc pa3 ba b--green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"Search Robots\"\n            onChange={searchChange}\n            />\n        </div> \n    )\n}\n\nexport default SearchBox","import React from 'react';\nconst Scroll = (props) => {\n    return (\n       <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n        {props.children}\n        </div>    \n    );\n}\n\nexport default Scroll","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info ) {\n        this.setState({ hasError: true })\n        \n    }\n    \n    \n      render () {\n          if (this.state.hasError) {\n              return <h1> Ooops. That is not good...</h1>\n          }  \n           return this.props.children\n      }\n    }\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport 'tachyons';\nimport Scroll from '../Components/Scroll';\nimport '../Containers/App.css';\nimport ErrorBoundry from '../Components/ErrorBoundry';\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchField: ''\n}\n    }\n   \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n        .then(users => {this.setState({robots: users})})\n        }\n    \n    onSearchChange = (event) => {\n     this.setState({ searchField: event.target.value})\n     }\n\n    render(){\n        const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(robot => {\n         return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    \n        return !robots.length ?\n            <h1 className=\"tc\">Loading...</h1> :\n        (\n        <div className=\"tc\">\n        <h1 className='f2'>RoboFriends - Reloaded</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll> \n            <ErrorBoundry>\n                <CardList robots={filteredRobots}/>\n            </ErrorBoundry>\n            </Scroll> \n        </div>\n        )\n    \n    \n    }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './card.js';\nimport App from './Containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n        <React.StrictMode>\n       <App />\n        </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}